---
# Copyright 2018 widdix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Security: WAF (Web Application Firewall), a cloudonaut.io template'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'WAF Parameters'
      Parameters:
      - Scope
      - RateLimit
      - RateLimitEffect
      - ReputationListEffect
      - AnonymousIpListEffect
      - AnonymousIpListExcludeRule1
      - BotControlEffect
      - BotControlExcludeRule1
      - BotControlExcludeRule2
      - BotControlExcludeRule3
      - BotControlExcludeRule4
      - BotControlExcludeRule5
      - CustomRuleEffect
      - AllowCloudFrontRequests
      - GeoLocationRestrictionEffect
      - AllowedCountryCodes
      - TrustedIPAddresses
      - BlockedIPAddresses
      - LogsRetentionInDays
Parameters:
  Scope:
    Description: 'Specify whether WAF shall be used with CloudFront (us-east-1 only!) or regional (ALB, API Gateway, and AppSync).'
    Type: String
    Default: 'REGIONAL'
    AllowedValues:
    - 'REGIONAL'
    - 'CLOUDFRONT'
  RateLimit:
    Description: 'The maximum number of requests from a single IP address that are allowed in a five-minute period.'
    Type: Number
    Default: 100
    MinValue: 100
    MaxValue: 20000000
  RateLimitEffect:
    Description: 'Block or count requests that exceed the rate limit. Alternatively, disable rate limiting at all.'
    Type: String
    Default: 'Block'
    AllowedValues:
    - 'Disable'
    - 'Block'
    - 'Count'
  ReputationListEffect:
    Description: 'Block or count requests with bad reputation. Alternatively, disable reputation list at all.'
    Type: String
    Default: 'Disable'
    AllowedValues:
    - 'Disable'
    - 'Block'
    - 'Count'
  AnonymousIpListEffect:
    Description: 'Block or count requests from anonymous IP addresses. Alternatively, disable anonymous IP list at all.'
    Type: String
    Default: 'Disable'
    AllowedValues:
    - 'Disable'
    - 'Block'
    - 'Count'
  AnonymousIpListExcludeRule1:
    Description: 'The rule whose actions are set to COUNT by the web ACL. This effectively excludes the rule from acting on web requests. (Valid rule names: https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html#aws-managed-rule-groups-anonymous-ip)'
    Type: String
    Default: ''
  BotControlEffect:
    Description: 'Block or count requests from bots. Alternatively, disable bot control at all.'
    Type: String
    Default: 'Disable'
    AllowedValues:
    - 'Disable'
    - 'Block'
    - 'Count'
  BotControlExcludeRule1:
    Description: 'The rule whose actions are set to COUNT by the web ACL. This effectively excludes the rule from acting on web requests. (Valid rule names: https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html#aws-managed-rule-groups-bot)'
    Type: String
    Default: ''
  BotControlExcludeRule2:
    Description: 'The rule whose actions are set to COUNT by the web ACL. This effectively excludes the rule from acting on web requests. (Valid rule names: https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html#aws-managed-rule-groups-bot)'
    Type: String
    Default: ''
  BotControlExcludeRule3:
    Description: 'The rule whose actions are set to COUNT by the web ACL. This effectively excludes the rule from acting on web requests. (Valid rule names: https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html#aws-managed-rule-groups-bot)'
    Type: String
    Default: ''
  BotControlExcludeRule4:
    Description: 'The rule whose actions are set to COUNT by the web ACL. This effectively excludes the rule from acting on web requests. (Valid rule names: https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html#aws-managed-rule-groups-bot)'
    Type: String
    Default: ''
  BotControlExcludeRule5:
    Description: 'The rule whose actions are set to COUNT by the web ACL. This effectively excludes the rule from acting on web requests. (Valid rule names: https://docs.aws.amazon.com/waf/latest/developerguide/aws-managed-rule-groups-list.html#aws-managed-rule-groups-bot)'
    Type: String
    Default: ''
  CustomRuleEffect:
    Description: 'Block or count requests that match the custom rule. Alternatively, disable the custom rule at all.'
    Type: String
    Default: 'Disable'
    AllowedValues:
    - 'Disable'
    - 'Block'
    - 'Count'
  AllowCloudFrontRequests:
    Description: 'Enable or disable allowing requests from CloudFront.'
    Type: String
    Default: 'Disable'
    AllowedValues:
      - 'Disable'
      - 'Enable'
  GeoLocationRestrictionEffect:
    Type: String
    Description: 'Action to take for requests not from allowed countries'
    Default: 'Disable'
    AllowedValues:
      - 'Disable'
      - 'Block'
      - 'Count'
  AllowedCountryCodes:
    Description: 'Comma-separated list of allowed country codes (e.g., IN,DE,DK)'
    Type: CommaDelimitedList
    Default: 'AD,AL,AT,BA,BE,BG,BY,CH,CY,CZ,DE,DK,EE,ES,FI,FR,GB,GR,HR,HU,IE,IS,IT,LI,LT,LU,LV,MC,MD,ME,MK,MT,NL,NO,PL,PT,RO,RS,SE,SI,SK,SM,UA,VA,GL,FO,IN,PK'
  TrustedIPAddresses:
    Description: 'Comma-separated list of trusted IP addresses or CIDR ranges (e.g., 192.168.1.1/32, 10.0.0.0/8)'
    Type: CommaDelimitedList
    Default: ''
  BlockedIPAddresses:
    Description: 'Comma-separated list of IP addresses or CIDR ranges to block (e.g., 192.168.1.1/32, 10.0.0.0/8)'
    Type: CommaDelimitedList
    Default: ''
  LogsRetentionInDays:
    Description: 'Specifies the number of days you want to retain log events in the specified log group.'
    Type: Number
    Default: 14
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
Conditions:
  EnableRateLimit: !Not [!Equals [!Ref RateLimitEffect, 'Disable']]
  BlockRateLimit: !Equals [!Ref RateLimitEffect, 'Block']
  EnableReputationList: !Not [!Equals [!Ref ReputationListEffect, 'Disable']]
  BlockReputationList: !Equals [!Ref ReputationListEffect, 'Block']
  EnableAnonymousIpList: !Not [!Equals [!Ref AnonymousIpListEffect, 'Disable']]
  BlockAnonymousIpList: !Equals [!Ref AnonymousIpListEffect, 'Block']
  HasAnonymousIpListExcludeRule1: !Not [!Equals [!Ref AnonymousIpListExcludeRule1, '']]
  EnableBotControl: !Not [!Equals [!Ref BotControlEffect, 'Disable']]
  BlockBotControl: !Equals [!Ref BotControlEffect, 'Block']
  HasBotControlExcludeRule1: !Not [!Equals [!Ref BotControlExcludeRule1, '']]
  HasBotControlExcludeRule2: !Not [!Equals [!Ref BotControlExcludeRule2, '']]
  HasBotControlExcludeRule3: !Not [!Equals [!Ref BotControlExcludeRule3, '']]
  HasBotControlExcludeRule4: !Not [!Equals [!Ref BotControlExcludeRule4, '']]
  HasBotControlExcludeRule5: !Not [!Equals [!Ref BotControlExcludeRule5, '']]
  EnableCustomRule: !Not [!Equals [!Ref CustomRuleEffect, 'Disable']]
  BlockCustomRule: !Equals [!Ref CustomRuleEffect, 'Block']
  EnableAllowCloudFrontRequests: !Equals [!Ref AllowCloudFrontRequests, 'Enable']
  EnableGeoLocationRestriction: !Not [!Equals [!Ref GeoLocationRestrictionEffect, 'Disable']]
  BlockGeoLocationRestriction: !Equals [!Ref GeoLocationRestrictionEffect, 'Block']
  HasTrustedIPAddresses: !Not [!Equals [!Join ['', !Ref TrustedIPAddresses], '']]
  HasBlockedIPAddresses: !Not [!Equals [!Join ['', !Ref BlockedIPAddresses], '']]
Resources:
  TrustedIPSet:
    Condition: HasTrustedIPAddresses
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: TrustedIPAddresses
      Addresses: !Ref TrustedIPAddresses
      IPAddressVersion: IPV4
      Scope: REGIONAL
      Description: List of trusted IP addresses
  BlockedIPSet:
    Condition: HasBlockedIPAddresses
    Type: AWS::WAFv2::IPSet
    Properties:
      Name: BlockedIPAddresses
      Addresses: !Ref BlockedIPAddresses
      IPAddressVersion: IPV4
      Scope: REGIONAL
      Description: List of blocked IP addresses
  WebACL:
    Type: 'AWS::WAFv2::WebACL'
    Properties:
      DefaultAction:
        Allow: {}
      Description: !Sub 'A collection of rules for ${AWS::StackName}.'
      Name: !Ref 'AWS::StackName'
      Rules:
      - !If
        - HasTrustedIPAddresses
        - Name: TrustedIPAddresses
          Priority: 0
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: TrustedIPAddresses
          Statement:
            IPSetReferenceStatement:
              ARN: !GetAtt TrustedIPSet.Arn
        - !Ref 'AWS::NoValue'
      - !If
        - HasBlockedIPAddresses
        - Name: BlockedIPAddresses
          Priority: 1
          Action:
            Block: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: BlockedIPAddresses
          Statement:
            IPSetReferenceStatement:
              ARN: !GetAtt BlockedIPSet.Arn
        - !Ref 'AWS::NoValue'
      - !If
        - EnableAllowCloudFrontRequests
        - Name: AllowCloudFrontRequests
          Priority: 10
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AllowCloudFrontRequests
          Statement:
            ByteMatchStatement:
              SearchString: Amazon CloudFront
              FieldToMatch:
                SingleHeader:
                  Name: user-agent
              TextTransformations:
                - Priority: 0
                  Type: NONE
              PositionalConstraint: EXACTLY
        - !Ref 'AWS::NoValue'
      - !If
        - EnableGeoLocationRestriction
        - Name: GeoLocationRestriction
          Priority: 11
          Action: !If
            - BlockGeoLocationRestriction
            - Block: {}
            - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: GeoLocationRestriction
          Statement:
            NotStatement:
              Statement:
                GeoMatchStatement:
                  CountryCodes: !Ref AllowedCountryCodes
        - !Ref 'AWS::NoValue'
      - !If
        - EnableReputationList
        - Name: AWSReputationList
          Priority: 12
          OverrideAction: !If
          - BlockReputationList
          - None: {}
          - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSReputationList
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAmazonIpReputationList
        - !Ref 'AWS::NoValue'
      - !If
        - EnableAnonymousIpList
        - Name: AWSAnonymousIpList
          Priority: 13
          OverrideAction: !If
          - BlockAnonymousIpList
          - None: {}
          - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSAnonymousIpList
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAnonymousIpList
              ExcludedRules:
              - !If [HasAnonymousIpListExcludeRule1, {Name: !Ref AnonymousIpListExcludeRule1}, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      - !If
        - EnableRateLimit
        - Name: RateLimit
          Priority: 14
          Statement:
            RateBasedStatement:
              Limit: !Ref RateLimit
              AggregateKeyType: FORWARDED_IP
              ForwardedIPConfig:
                HeaderName: X-Forwarded-For
                FallbackBehavior: MATCH
          Action: !If
          - BlockRateLimit
          - Block: {}
          - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: RateLimit
        - !Ref 'AWS::NoValue'
      - !If
        - EnableBotControl
        - Name: AWSBotControl
          Priority: 15
          OverrideAction: !If
          - BlockBotControl
          - None: {}
          - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: AWSBotControl
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesBotControlRuleSet
              ExcludedRules:
              - !If [HasBotControlExcludeRule1, {Name: !Ref BotControlExcludeRule1}, !Ref 'AWS::NoValue']
              - !If [HasBotControlExcludeRule2, {Name: !Ref BotControlExcludeRule2}, !Ref 'AWS::NoValue']
              - !If [HasBotControlExcludeRule3, {Name: !Ref BotControlExcludeRule3}, !Ref 'AWS::NoValue']
              - !If [HasBotControlExcludeRule4, {Name: !Ref BotControlExcludeRule4}, !Ref 'AWS::NoValue']
              - !If [HasBotControlExcludeRule5, {Name: !Ref BotControlExcludeRule5}, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      - !If
        - EnableCustomRule
        - Name: CustomRule
          Priority: 16
          Action: !If
          - BlockCustomRule
          - Block: {}
          - Count: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: CustomRule
          Statement:
            AndStatement:
              Statements:
                - LabelMatchStatement:
                    Scope: LABEL
                    Key: awswaf:managed:aws:bot-control:signal:bot_detected
                - OrStatement:
                    Statements:
                      - AndStatement:
                          Statements:
                            - NotStatement:
                                Statement:
                                  ByteMatchStatement:
                                    SearchString: Amazon CloudFront
                                    FieldToMatch:
                                      SingleHeader:
                                        Name: user-agent
                                    TextTransformations:
                                      - Priority: 0
                                        Type: NONE
                                    PositionalConstraint: EXACTLY
                            - LabelMatchStatement:
                                Scope: LABEL
                                Key: awswaf:managed:aws:bot-control:signal:non_browser_user_agent
                      - AndStatement:
                          Statements:
                            - NotStatement:
                                Statement:
                                  ByteMatchStatement:
                                    SearchString: okhttp
                                    FieldToMatch:
                                      SingleHeader:
                                        Name: user-agent
                                    TextTransformations:
                                      - Priority: 0
                                        Type: NONE
                                    PositionalConstraint: CONTAINS
                            - LabelMatchStatement:
                                Scope: LABEL
                                Key: awswaf:managed:aws:bot-control:bot:category:http_library
        - !Ref 'AWS::NoValue'
      Scope: !Ref Scope
      VisibilityConfig:
        CloudWatchMetricsEnabled: true
        MetricName: !Ref 'AWS::StackName'
        SampledRequestsEnabled: true
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Sub '${AWS::StackName}-LogGroup'
      RetentionInDays: !Ref LogsRetentionInDays
  WAFLoggingConfiguration:
    Type: AWS::WAFv2::LoggingConfiguration
    Properties:
      ResourceArn: !GetAtt WebACL.Arn
      LogDestinationConfigs:
        - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${AWS::StackName}-LogGroup:*'
Outputs:
  TemplateID:
    Description: 'cloudonaut.io template id.'
    Value: 'security/waf'
  TemplateVersion:
    Description: 'cloudonaut.io template version.'
    Value: '__VERSION__'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  WebACL:
    Description: 'The ARN of the Web ACL.'
    Value: !GetAtt 'WebACL.Arn'
    Export:
      Name: !Sub '${AWS::StackName}-WebACL'
